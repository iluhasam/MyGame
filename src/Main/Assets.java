package Main;

//import entity.NPC_BigRock;

import data.Progress;
import entity.NPC_OldMan;
import entity.NPC_Trader;
import entity.NPC_Trader2;
import entity.NPC_Witch;
import monster.*;
import object.*;
import tile_interactive.IT_DryTree;
//import tile_interactive.IT_MetalPlate;

public class Assets {
    GamePanel gp;
    public Assets(GamePanel gp) {
        this.gp = gp;
    }
    public void setObject(){
        int mapNum = 0;
        int i = 0;
//        gp.obj[mapNum][i] = new OBJ_Coin_Bronze(gp);
//        gp.obj[mapNum][i].worldX = gp.tileSize*25;
//        gp.obj[mapNum][i].worldY = gp.tileSize*19;
//        i++;
//        gp.obj[mapNum][i] = new OBJ_Coin_Bronze(gp);
//        gp.obj[mapNum][i].worldX = gp.tileSize*21;
//        gp.obj[mapNum][i].worldY = gp.tileSize*19;
//        i++;
        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Key(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*30;
        gp.obj[mapNum][i].worldY = gp.tileSize*29;
        i++;
        gp.obj[mapNum][i] = new OBJ_Door(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*14;
        gp.obj[mapNum][i].worldY = gp.tileSize*28;
        i++;
        gp.obj[mapNum][i] = new OBJ_Door(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*12;
        gp.obj[mapNum][i].worldY = gp.tileSize*12;
        i++;
        gp.obj[mapNum][i] = new OBJ_Key(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*26;
        gp.obj[mapNum][i].worldY = gp.tileSize*21;
        i++;
        gp.obj[mapNum][i] = new OBJ_Axe_Wood(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*33;
        gp.obj[mapNum][i].worldY = gp.tileSize*21;
        i++;
        gp.obj[mapNum][i] = new OBJ_Lantern(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*18;
        gp.obj[mapNum][i].worldY = gp.tileSize*20;
        i++;
        gp.obj[mapNum][i] = new OBJ_Potion_Red(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*22;
        gp.obj[mapNum][i].worldY = gp.tileSize*27;
        i++;
        gp.obj[mapNum][i] = new OBJ_Tent(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*23;
        gp.obj[mapNum][i].worldY = gp.tileSize*27;
        i++;

        mapNum = 2;
        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Pickaxe(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*40 ;
        gp.obj[mapNum][i].worldY = gp.tileSize*41;
        i++;
        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*13 ;
        gp.obj[mapNum][i].worldY = gp.tileSize*16;
        i++;

        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*26 ;
        gp.obj[mapNum][i].worldY = gp.tileSize*34;
        i++;

        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*27 ;
        gp.obj[mapNum][i].worldY = gp.tileSize*15;
        i++;

        mapNum = 3;
         i = 0;
        gp.obj[mapNum][i] = new OBJ_Door_Iron(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*25 ;
        gp.obj[mapNum][i].worldY = gp.tileSize*15;
        i++;

        gp.obj[mapNum][i] = new OBJ_BlueHeart(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*25 ;
        gp.obj[mapNum][i].worldY = gp.tileSize*8;
        i++;


        mapNum = 4;
        gp.obj[mapNum][i] = new OBJ_Tent_Small(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*43;
        gp.obj[mapNum][i].worldY = gp.tileSize*42;
        i++;
        gp.obj[mapNum][i] = new OBJ_Tent_Big(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*38;
        gp.obj[mapNum][i].worldY = gp.tileSize*42;
        i++;
        gp.obj[mapNum][i] = new OBJ_Building_blue(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*58;
        gp.obj[mapNum][i].worldY = gp.tileSize*47;
        i++;
        gp.obj[mapNum][i] = new OBJ_Building_red(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*64;
        gp.obj[mapNum][i].worldY = gp.tileSize*47;
        i++;
        gp.obj[mapNum][i] = new OBJ_Building3_blue(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*59;
        gp.obj[mapNum][i].worldY = gp.tileSize*61;
        i++;

        mapNum = 6;
        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*26;
        gp.obj[mapNum][i].worldY = gp.tileSize*15;
        i++;

        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*90;
        gp.obj[mapNum][i].worldY = gp.tileSize*53;
        i++;

        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*12;
        gp.obj[mapNum][i].worldY = gp.tileSize*69;
        i++;

        mapNum = 7;
        gp.obj[mapNum][i] = new OBJ_With_Hut(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*20;
        gp.obj[mapNum][i].worldY = gp.tileSize*35;
        i++;

        mapNum = 8;
        gp.obj[mapNum][i] = new OBJ_Grave(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*29;
        gp.obj[mapNum][i].worldY = gp.tileSize*80;
        i++;
        gp.obj[mapNum][i] = new OBJ_Grave(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*32;
        gp.obj[mapNum][i].worldY = gp.tileSize*80;
        i++;
        gp.obj[mapNum][i] = new OBJ_Grave(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*38;
        gp.obj[mapNum][i].worldY = gp.tileSize*80;
        i++;
        gp.obj[mapNum][i] = new OBJ_Grave(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*41;
        gp.obj[mapNum][i].worldY = gp.tileSize*80;
        i++;
        gp.obj[mapNum][i] = new OBJ_Grave1(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*32;
        gp.obj[mapNum][i].worldY = gp.tileSize*63;
        i++;
        gp.obj[mapNum][i] = new OBJ_Grave1(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*33;
        gp.obj[mapNum][i].worldY = gp.tileSize*63;
        i++;
        gp.obj[mapNum][i] = new OBJ_Grave1(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*38;
        gp.obj[mapNum][i].worldY = gp.tileSize*63;
        i++;
        gp.obj[mapNum][i] = new OBJ_Grave1(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*39;
        gp.obj[mapNum][i].worldY = gp.tileSize*63;
        i++;
        gp.obj[mapNum][i] = new OBJ_Grave2(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*21;
        gp.obj[mapNum][i].worldY = gp.tileSize*14;
        i++;
        gp.obj[mapNum][i] = new OBJ_Grave2(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*9;
        gp.obj[mapNum][i].worldY = gp.tileSize*14;
        i++;
        gp.obj[mapNum][i] = new OBJ_Grave2(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*18;
        gp.obj[mapNum][i].worldY = gp.tileSize*16;
        i++;

        gp.obj[mapNum][i] = new OBJ_Statue(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*25;
        gp.obj[mapNum][i].worldY = gp.tileSize*63;
        i++;
        gp.obj[mapNum][i] = new OBJ_Statue(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*9;
        gp.obj[mapNum][i].worldY = gp.tileSize*7;
        i++;
        gp.obj[mapNum][i] = new OBJ_Statue(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*18;
        gp.obj[mapNum][i].worldY = gp.tileSize*7;
        i++;
        gp.obj[mapNum][i] = new OBJ_Statue(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*63;
        gp.obj[mapNum][i].worldY = gp.tileSize*27;
        i++;
        gp.obj[mapNum][i] = new OBJ_Statue(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*57;
        gp.obj[mapNum][i].worldY = gp.tileSize*27;
        i++;
        gp.obj[mapNum][i] = new OBJ_Statue(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*67;
        gp.obj[mapNum][i].worldY = gp.tileSize*17;
        i++;
        gp.obj[mapNum][i] = new OBJ_Statue(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*57;
        gp.obj[mapNum][i].worldY = gp.tileSize*27;
        i++;
        gp.obj[mapNum][i] = new OBJ_Statue(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*85;
        gp.obj[mapNum][i].worldY = gp.tileSize*16;
        i++;

        gp.obj[mapNum][i] = new OBJ_Web(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*85;
        gp.obj[mapNum][i].worldY = gp.tileSize*29;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*82;
        gp.obj[mapNum][i].worldY = gp.tileSize*24;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*69;
        gp.obj[mapNum][i].worldY = gp.tileSize*25;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*72;
        gp.obj[mapNum][i].worldY = gp.tileSize*32;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*77;
        gp.obj[mapNum][i].worldY = gp.tileSize*29;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*75;
        gp.obj[mapNum][i].worldY = gp.tileSize*29;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*80;
        gp.obj[mapNum][i].worldY = gp.tileSize*31;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*58;
        gp.obj[mapNum][i].worldY = gp.tileSize*68;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*43;
        gp.obj[mapNum][i].worldY = gp.tileSize*72;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*36;
        gp.obj[mapNum][i].worldY = gp.tileSize*66;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*27;
        gp.obj[mapNum][i].worldY = gp.tileSize*72;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*25;
        gp.obj[mapNum][i].worldY = gp.tileSize*76;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*37;
        gp.obj[mapNum][i].worldY = gp.tileSize*83;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*31;
        gp.obj[mapNum][i].worldY = gp.tileSize*85;
        i++;

        gp.obj[mapNum][i] = new OBJ_Web1(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*57;
        gp.obj[mapNum][i].worldY = gp.tileSize*29;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web1(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*65;
        gp.obj[mapNum][i].worldY = gp.tileSize*32;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web1(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*65;
        gp.obj[mapNum][i].worldY = gp.tileSize*35;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web1(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*69;
        gp.obj[mapNum][i].worldY = gp.tileSize*39;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web1(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*73;
        gp.obj[mapNum][i].worldY = gp.tileSize*42;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web1(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*65;
        gp.obj[mapNum][i].worldY = gp.tileSize*16;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web1(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*65;
        gp.obj[mapNum][i].worldY = gp.tileSize*18;
        i++;
        gp.obj[mapNum][i] = new OBJ_Web1(gp);
        gp.obj[mapNum][i].worldX = gp.tileSize*83;
        gp.obj[mapNum][i].worldY = gp.tileSize*18;
        i++;

        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*90;
        gp.obj[mapNum][i].worldY = gp.tileSize*53;
        i++;
        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*90;
        gp.obj[mapNum][i].worldY = gp.tileSize*53;
        i++;
        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*10;
        gp.obj[mapNum][i].worldY = gp.tileSize*8;
        i++;
        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*9;
        gp.obj[mapNum][i].worldY = gp.tileSize*8;
        i++;
        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*67;
        gp.obj[mapNum][i].worldY = gp.tileSize*17;
        i++;
        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*68;
        gp.obj[mapNum][i].worldY = gp.tileSize*17;
        i++;
        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*85;
        gp.obj[mapNum][i].worldY = gp.tileSize*17;
        i++;
        gp.obj[mapNum][i] = new OBJ_Chest(gp);
        gp.obj[mapNum][i].setLoot(new OBJ_Potion_Red(gp));
        gp.obj[mapNum][i].worldX = gp.tileSize*86;
        gp.obj[mapNum][i].worldY = gp.tileSize*17;
        i++;





    }
    public void setNPC(){
        //MAP 0
        int mapNum = 0;
        int i = 0;
        gp.npc[mapNum][i] = new NPC_OldMan(gp);
        gp.npc[mapNum][i].worldX = gp.tileSize * 25;
        gp.npc[mapNum][i].worldY = gp.tileSize * 23;
        i++;

        //MAP 1
        mapNum = 1;
        i = 0;
        gp.npc[mapNum][i] = new NPC_Trader(gp);
        gp.npc[mapNum][i].worldX = gp.tileSize * 12;
        gp.npc[mapNum][i].worldY = gp.tileSize * 7;
        i++;

        mapNum = 7;
        i = 0;
        gp.npc[mapNum][i] = new NPC_Witch(gp);
        gp.npc[mapNum][i].worldX = gp.tileSize * 18;
        gp.npc[mapNum][i].worldY = gp.tileSize * 42;

        //MAP 5
        mapNum = 5;
        i = 0;
        gp.npc[mapNum][i] = new NPC_Trader2(gp);
        gp.npc[mapNum][i].worldX = gp.tileSize * 22;
        gp.npc[mapNum][i].worldY = gp.tileSize * 16;
        i++;

    }
    public void setMonster(){
        int mapNum = 0;
        int i = 0;
        gp.monster[mapNum][i]= new MON_GreenSlime(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 23;
        gp.monster[mapNum][i].worldY = gp.tileSize * 36;
        i++;
        gp.monster[mapNum][i]= new MON_GreenSlime(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 23;
        gp.monster[mapNum][i].worldY = gp.tileSize * 37;
        i++;
        gp.monster[mapNum][i]= new MON_GreenSlime(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 24;
        gp.monster[mapNum][i].worldY = gp.tileSize * 37;
        i++;
        gp.monster[mapNum][i]= new MON_GreenSlime(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 34;
        gp.monster[mapNum][i].worldY = gp.tileSize * 42;
        i++;
        gp.monster[mapNum][i]= new MON_RedSlime(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 34;
        gp.monster[mapNum][i].worldY = gp.tileSize * 37;
        i++;
        gp.monster[mapNum][i] = new MON_Orc(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 12;
        gp.monster[mapNum][i].worldY = gp.tileSize * 33;
        i++;
        gp.monster[mapNum][i]= new MON_Dworf(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 12;
        gp.monster[mapNum][i].worldY = gp.tileSize * 31;
        i++;
        gp.monster[mapNum][i]= new MON_GArcher(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 23;
        gp.monster[mapNum][i].worldY = gp.tileSize * 17;
        i++;
        gp.monster[mapNum][i]= new MON_GMaceman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 24;
        gp.monster[mapNum][i].worldY = gp.tileSize * 15;
        i++;
        gp.monster[mapNum][i]= new MON_GSpearman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 22;
        gp.monster[mapNum][i].worldY = gp.tileSize * 15;
        i++;


        mapNum = 2;
        i++;
        gp.monster[mapNum][i]= new MON_Bat(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 34;
        gp.monster[mapNum][i].worldY = gp.tileSize * 39;
        i++;
        gp.monster[mapNum][i]= new MON_Bat(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 36;
        gp.monster[mapNum][i].worldY = gp.tileSize * 25;
        i++;
        gp.monster[mapNum][i]= new MON_Bat(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 39;
        gp.monster[mapNum][i].worldY = gp.tileSize * 26;
        i++;
        gp.monster[mapNum][i]= new MON_Bat(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 28;
        gp.monster[mapNum][i].worldY = gp.tileSize * 11;
        i++;
        gp.monster[mapNum][i]= new MON_Bat(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 10;
        gp.monster[mapNum][i].worldY = gp.tileSize * 19;
        i++;

        mapNum = 3;
        if(Progress.skeletonLordDefeated == false){
            gp.monster[mapNum][i]= new MON_SkeletonLord(gp);
            gp.monster[mapNum][i].worldX = gp.tileSize * 23;
            gp.monster[mapNum][i].worldY = gp.tileSize * 16;
            i++;
        }

        mapNum = 6;
        i++;
        gp.monster[mapNum][i]= new MON_Goblin(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 43;
        gp.monster[mapNum][i].worldY = gp.tileSize * 33;
        i++;
        gp.monster[mapNum][i]= new MON_Goblin(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 45;
        gp.monster[mapNum][i].worldY = gp.tileSize * 36;
        i++;
        gp.monster[mapNum][i]= new MON_Goblin(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 46;
        gp.monster[mapNum][i].worldY = gp.tileSize * 39;
        i++;
        gp.monster[mapNum][i]= new MON_Goblin(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 41;
        gp.monster[mapNum][i].worldY = gp.tileSize * 43;
        i++;
        gp.monster[mapNum][i]= new MON_Ghost(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 43;
        gp.monster[mapNum][i].worldY = gp.tileSize * 46;
        i++;
        gp.monster[mapNum][i]= new MON_Ghost(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 53;
        gp.monster[mapNum][i].worldY = gp.tileSize * 43;
        i++;
        gp.monster[mapNum][i]= new MON_Ghost(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 55;
        gp.monster[mapNum][i].worldY = gp.tileSize * 42;
        i++;
        gp.monster[mapNum][i]= new MON_Ghost(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 63;
        gp.monster[mapNum][i].worldY = gp.tileSize * 49;
        i++;
        gp.monster[mapNum][i]= new MON_Ghost(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 70;
        gp.monster[mapNum][i].worldY = gp.tileSize * 57;
        i++;
        gp.monster[mapNum][i]= new MON_Ghost(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 70;
        gp.monster[mapNum][i].worldY = gp.tileSize * 57;
        i++;
        gp.monster[mapNum][i]= new MON_Ghost(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 70;
        gp.monster[mapNum][i].worldY = gp.tileSize * 57;
        i++;
        mapNum = 8;
        i++;
        if(Progress.devilDeafeated == false){
            gp.monster[mapNum][i]= new MON_Devil(gp);
            gp.monster[mapNum][i].worldX = gp.tileSize * 76;
            gp.monster[mapNum][i].worldY = gp.tileSize * 23;
            i++;
        }
        i++;
        gp.monster[mapNum][i]= new MON_Bat(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 23;
        gp.monster[mapNum][i].worldY = gp.tileSize * 69;
        i++;
        gp.monster[mapNum][i]= new MON_Bat(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 36;
        gp.monster[mapNum][i].worldY = gp.tileSize * 83;
        i++;
        gp.monster[mapNum][i]= new MON_Bat(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 59;
        gp.monster[mapNum][i].worldY = gp.tileSize * 65;
        i++;
        gp.monster[mapNum][i]= new MON_Bat(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 8;
        gp.monster[mapNum][i].worldY = gp.tileSize * 11;
        i++;
        gp.monster[mapNum][i]= new MON_Bat(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 23;
        gp.monster[mapNum][i].worldY = gp.tileSize * 11;
        i++;
        gp.monster[mapNum][i]= new MON_GMaceman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 56;
        gp.monster[mapNum][i].worldY = gp.tileSize * 66;
        i++;
        gp.monster[mapNum][i]= new MON_GMaceman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 54;
        gp.monster[mapNum][i].worldY = gp.tileSize * 66;
        i++;
        gp.monster[mapNum][i]= new MON_GMaceman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 52;
        gp.monster[mapNum][i].worldY = gp.tileSize * 66;
        i++;
        gp.monster[mapNum][i]= new MON_GMaceman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 48;
        gp.monster[mapNum][i].worldY = gp.tileSize * 66;
        i++;
        gp.monster[mapNum][i]= new MON_GMaceman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 46;
        gp.monster[mapNum][i].worldY = gp.tileSize * 66;
        i++;
        gp.monster[mapNum][i]= new MON_GMaceman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 44;
        gp.monster[mapNum][i].worldY = gp.tileSize * 66;
        i++;
        gp.monster[mapNum][i]= new MON_GMaceman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 42;
        gp.monster[mapNum][i].worldY = gp.tileSize * 66;
        i++;
        gp.monster[mapNum][i]= new MON_GMaceman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 40;
        gp.monster[mapNum][i].worldY = gp.tileSize * 66;
        i++;

        i++;
        gp.monster[mapNum][i]= new MON_GreenSlime(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 20;
        gp.monster[mapNum][i].worldY = gp.tileSize * 14;
        i++;
        gp.monster[mapNum][i]= new MON_GreenSlime(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 26;
        gp.monster[mapNum][i].worldY = gp.tileSize * 65;
        i++;

        i++;
        gp.monster[mapNum][i]= new MON_GSpearman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 31;
        gp.monster[mapNum][i].worldY = gp.tileSize * 64;
        i++;
        gp.monster[mapNum][i]= new MON_GSpearman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 68;
        gp.monster[mapNum][i].worldY = gp.tileSize * 64;
        i++;
        gp.monster[mapNum][i]= new MON_GSpearman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 73;
        gp.monster[mapNum][i].worldY = gp.tileSize * 64;
        i++;

        gp.monster[mapNum][i]= new MON_GSpearman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 88;
        gp.monster[mapNum][i].worldY = gp.tileSize * 20;
        i++;
        gp.monster[mapNum][i]= new MON_GSpearman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 88;
        gp.monster[mapNum][i].worldY = gp.tileSize * 20;
        i++;
        gp.monster[mapNum][i]= new MON_GSpearman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 84;
        gp.monster[mapNum][i].worldY = gp.tileSize * 21;
        i++;
        gp.monster[mapNum][i]= new MON_GSpearman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 86;
        gp.monster[mapNum][i].worldY = gp.tileSize * 30;
        i++;
        gp.monster[mapNum][i]= new MON_GMaceman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 74;
        gp.monster[mapNum][i].worldY = gp.tileSize * 32;
        i++;
        gp.monster[mapNum][i]= new MON_GMaceman(gp);
        gp.monster[mapNum][i].worldX = gp.tileSize * 72;
        gp.monster[mapNum][i].worldY = gp.tileSize * 20;
        i++;




    }
    public void setInteractiveTile(){
        int mapNum = 0;
        int i = 0;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,27, 12);i++;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,28, 12);i++;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,29, 12);i++;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,30, 12);i++;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,31, 12);i++;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,32, 12);i++;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,33, 12);i++;

        gp.iTile[mapNum][i] = new IT_DryTree(gp,18, 40);i++;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,17, 40 );i++;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,16, 40 );i++;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,15, 40 );i++;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,14, 40 );i++;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,13, 40 );i++;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,13, 41 );i++;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,12, 41 );i++;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,11, 41 );i++;
        gp.iTile[mapNum][i] = new IT_DryTree(gp,10, 41 );i++;
    }
}
